let User,hashPassword,comparePassword;_ef7‍.x([["register",()=>register]]);_ef7‍.w("../models/user",[["default",["User"],function(v){User=v}]]);_ef7‍.w("../utils/auth",[["hashPassword",["hashPassword"],function(v){hashPassword=v}],["comparePassword",["comparePassword"],function(v){comparePassword=v}]]);


       const register = async (req, res) => {
    console.log("hit register controller")
    try {
        _ef7‍.g.console.log( req.body)
        const {name, email, password} = req.body
        //validation
        if (!name) return res.status(400).send("Name is required")
        if (!password || password.length <6){
            return res
            .status(400)
            .send("Password is required and should be min 6 characters long")
        }
        let userExist = await User.findOne({email})
        if(userExist){
            return res.status(400).send("This E-main address is already taken")
        }

        //hash password
        const hashedPassword = await hashPassword(password)

        //register the user
        const user =await new User({name, email, password:hashedPassword}).save();
        _ef7‍.g.console.log("saved user", user)

        return res.json({ok:true})
        
    } catch (err) {
        _ef7‍.g.console.log(err);
        return res.status(400).send("Error, please try again")
    }
  }